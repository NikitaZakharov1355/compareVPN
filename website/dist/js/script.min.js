!function s(o,n,i){function l(e,t){if(!n[e]){if(!o[e]){var a="function"==typeof require&&require;if(!t&&a)return a(e,!0);if(r)return r(e,!0);throw new Error("Cannot find module '"+e+"'")}t=n[e]={exports:{}};o[e][0].call(t.exports,function(t){var a=o[e][1][t];return l(a||t)},t,t.exports,s,o,n,i)}return n[e].exports}for(var r="function"==typeof require&&require,t=0;t<i.length;t++)l(i[t]);return l}({1:[function(t,a,e){jQuery(document).ready(function(n){n(".scroll-top").click(function(){n("html, body").animate({scrollTop:0},600)}),n(".search-form-wrap").submit(function(){return n(".search-form-btn").click(),!1});var t=1;function a(a,e){var t=n(".search-form-field").val(),s=[],o=[],t=(n('.tag-filter input[name="tags[]"]:checked').each(function(){s.push(n(this).val())}),n('.tag-filter input[name="types[]"]:checked').each(function(){o.push(n(this).val())}),0==o.length&&(o=["post","vpn"]),{action:"load_more_posts",page:a,search:t,tags:s.join(","),types:o.join(",")});n(".post_loop").addClass("loading"),n.ajax({url:"/wp-admin/admin-ajax.php",type:"POST",data:t,success:function(t){n(".post_main-title-h2 .title_inner span").text(n(".search-form-field").val()),console.log(t.data),t.success?t.data.has_posts?((e.hasClass("custom-checkbox-input")||e.hasClass("search-form-btn"))&&n(".post_loop").html(""),n(".post_loop").append(t.data.posts),n(".load_more-post").show(),n(".load_more-post").removeAttr("disabled")):1==a?n(".post_loop").html(""):n(".load_more-post").hide():n(".load_more-post").attr("disabled",!0),n(".post_loop").removeClass("loading")},error:function(){n(".load_more-post").attr("disabled",!0),alert("An error occurred. Please try again.")}})}n(".tag-filter input, .search-form-btn").off("click").on("click",function(){n(this).parent().hasClass("tag-filter-tab-title")&&(n(".tag-filter-tab-title").removeClass("active"),n(this).parent().addClass("active")),n(".tag-filter-tab-post").hasClass("active")?n(".tab-filter-post-wrap").fadeIn():n(".tab-filter-post-wrap").fadeOut(),a(t=1,n(this))}),n(".load_more-post").off("click").on("click",function(){a(++t,n(this))});var e,s,o=1;n(".load_more-comments").on("click",function(){var a=n(this),t=a.data("post-id");n.ajax({url:"/wp-admin/admin-ajax.php",type:"POST",data:{action:"load_more_comments",post_id:t,paged:o},beforeSend:function(){a.text("Loading...")},success:function(t){t?(n(".comment-list").append(t),o++,a.text("Load More")):a.text("No More Comments").attr("disabled",!0)}})}),n(".rating-star").on("click",function(){var t=n(this).data("rating");n("#comment_rating").val(t),n(".rating-star").removeClass("selected"),n(this).addClass("selected").prevAll().addClass("selected"),n("#rating-feedback").text("You selected "+t+" star"+(1<t?"s":""))}),n("body").on("click",".comment-like-button",function(t){t.preventDefault(),n(this).addClass("active");var a=n(this),t=a.data("comment-id");n.ajax({type:"POST",url:"/wp-admin/admin-ajax.php",data:{action:"like_comment",comment_id:t},success:function(t){t.success?a.closest(".comment").find(".comment-actions-like-counter").text(t.data.like_count+" liked"):console.log(t.data)},error:function(){console.log("An error occurred. Please try again.")}})}),n("table").wrap('<div class="vpn-table-wrapper-inner"></div>').wrap('<div class="vpn-table-wrapper"></div>'),n(window).width()<768&&(n(".header").append('<div class="header_nav-mobile"></div>'),e=n(".header_nav"),s=n(".header_action"),n(".header_nav-mobile").append(e).append(s),n(".header_nav-button").click(function(){n(".header_nav-mobile").toggleClass("active")}),n(".header_nav-mobile ul:not(.sub-menu) > li.menu-item-has-children > a").click(function(){return!!n(this).next(".sub-menu").hasClass("active")||(n(this).next(".sub-menu").addClass("active"),!1)}),n(".header_nav-mobile ul:not(.sub-menu) > li.menu-item-has-children").click(function(){n(this).children(".sub-menu").hasClass("active")?n(this).children(".sub-menu").removeClass("active"):n(this).children(".sub-menu").addClass("active")}),n(".footer_info-socials").appendTo(n(".footer_top"))),n(".header_action-search-toggle, .header_action-lang-toggle").click(function(){n(this).next().slideToggle()}),n("*[data-toggle]").click(function(){var t=n(this).data("toggle");n("#"+t).slideToggle()}),n(".comment-form-cookies-consent input").click(function(){n(this).parent().toggleClass("checked")}),n(".faq_item-head").click(function(){n(this).next().slideToggle()});var i=1;n(".post_main h2").each(function(){var t;if(""==(t=(0<n(this).find(".title_inner").length?n(this).find(".title_inner"):n(this)).text()))return!0;var a="section-"+i;i++,n(this).attr("id",a),n("#toc-list").append(`<li><a href="#${a}">${t}</a></li`)}),n(".post_aside-contents-list-scroll").height()<432&&n(".post_aside-contents-list-scroll").parent().addClass("scrolled-to-bottom"),n(window).scroll(function(){0<n(this).scrollTop()?n(".scroll-top-wrap").fadeIn():n(".scroll-top-wrap").fadeOut();let t=n(".post_aside-contents-list-scroll a"),a=n(window).scrollTop();t.each(function(){n(n(this).attr("href")).offset().top<=a+10&&(n(this).parent().nextAll().removeClass("active"),n(this).parent().addClass("active"),n(this).parent().prevAll().addClass("active"))}),0<a&&!n("#contents-list").hasClass("toggled_nav")&&!n("body").hasClass("single-vpn")&&n("#contents-list").fadeOut().addClass("toggled_nav")}),n(".post_aside-contents-list-scroll").on("scroll",function(){var t=n(".post_aside-contents-list-scroll"),a=t[0].scrollHeight;t.scrollTop()+t.parent().height()==a?t.parent().addClass("scrolled-to-bottom"):t.parent().removeClass("scrolled-to-bottom")}),n("#commentform").on("submit",function(t){var a,e;n("body").hasClass("single-vpn")&&(a=n(".post_main-author-descr-action-rating").data("post-id"),e=n(".rating-star.selected").last().data("rating"),n.ajax({url:"/wp-admin/admin-ajax.php",method:"POST",data:{action:"vpn_rating",post_id:a,rating:e},success:function(t){t.success,n("#rating-feedback").text(t.data.message)}}))}),n(".rating-star").on("click",function(){var t,a;n("body").hasClass("single-vpn")||(t=n(this).closest(".post_main-author-descr-action-rating").data("post-id"),a=n(this).data("rating"),n.ajax({url:"/wp-admin/admin-ajax.php",method:"POST",data:{action:"vpn_rating",post_id:t,rating:a},success:function(t){t.success,n("#rating-feedback").text(t.data.message)}}))})})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
